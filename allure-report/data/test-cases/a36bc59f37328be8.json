{
  "uid" : "a36bc59f37328be8",
  "name" : "test_login_with_valid_credentials[amotoorisampletwo@gmail.com-secondtwo]",
  "fullName" : "tests.test_login.TestLogin#test_login_with_valid_credentials",
  "historyId" : "2a2c4372eb0a4f35e912dba59853f7d2",
  "time" : {
    "start" : 1711091652522,
    "stop" : 1711091652522,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n\tGetHandleVerifier [0x00007FF692407062+63090]\n\t(No symbol) [0x00007FF692372CB2]\n\t(No symbol) [0x00007FF69220EB1D]\n\t(No symbol) [0x00007FF6921FC76D]\n\t(No symbol) [0x00007FF6921FB100]\n\t(No symbol) [0x00007FF6921FBA8F]\n\t(No symbol) [0x00007FF69220925A]\n\t(No symbol) [0x00007FF69221AB0E]\n\t(No symbol) [0x00007FF69221F82A]\n\t(No symbol) [0x00007FF6921FC006]\n\t(No symbol) [0x00007FF69221A6A4]\n\t(No symbol) [0x00007FF6922932ED]\n\t(No symbol) [0x00007FF692276D83]\n\t(No symbol) [0x00007FF6922483A8]\n\t(No symbol) [0x00007FF692249441]\n\tGetHandleVerifier [0x00007FF6928025CD+4238301]\n\tGetHandleVerifier [0x00007FF69283F72D+4488509]\n\tGetHandleVerifier [0x00007FF692837A0F+4456479]\n\tGetHandleVerifier [0x00007FF6924E05A6+953270]\n\t(No symbol) [0x00007FF69237E57F]\n\t(No symbol) [0x00007FF692379254]\n\t(No symbol) [0x00007FF69237938B]\n\t(No symbol) [0x00007FF692369BC4]\n\tBaseThreadInitThunk [0x00007FFE294726AD+29]\n\tRtlUserThreadStart [0x00007FFE2A76AA68+40]",
  "statusTrace" : "request = <SubRequest 'setup_and_teardown' for <Function test_login_with_valid_credentials[amotoorisampletwo@gmail.com-secondtwo]>>\n\n    @pytest.fixture()\n    def setup_and_teardown(request):\n        browser = ReadConfigurations.read_configuration(\"basic info\", \"browser\")\n        if browser not in ['chrome', 'firefox', 'edge']:\n            raise ValueError(\"Provide a valid browser name: chrome, firefox, edge\")\n        global driver\n        driver = None\n        if browser.__eq__(\"chrome\"):\n            driver = webdriver.Chrome()\n        elif browser.__eq__(\"firefox\"):\n            driver = webdriver.Firefox()\n        elif browser.__eq__(\"edge\"):\n            driver = webdriver.Edge()\n        else:\n            print(\"provide a valid browser name from this list chrome/firefox,edge\")\n    \n>       driver.maximize_window()\n\ntests\\conftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:499: in maximize_window\n    self.execute(command, None)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001769DCF6850>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"no such execution context\",\"message\":\"no such execution context\\\\n  (Sess...07FF692369BC4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE294726AD+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFE2A76AA68+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: no such execution context\nE         (Session info: chrome=123.0.6312.58)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF692407062+63090]\nE       \t(No symbol) [0x00007FF692372CB2]\nE       \t(No symbol) [0x00007FF69220EB1D]\nE       \t(No symbol) [0x00007FF6921FC76D]\nE       \t(No symbol) [0x00007FF6921FB100]\nE       \t(No symbol) [0x00007FF6921FBA8F]\nE       \t(No symbol) [0x00007FF69220925A]\nE       \t(No symbol) [0x00007FF69221AB0E]\nE       \t(No symbol) [0x00007FF69221F82A]\nE       \t(No symbol) [0x00007FF6921FC006]\nE       \t(No symbol) [0x00007FF69221A6A4]\nE       \t(No symbol) [0x00007FF6922932ED]\nE       \t(No symbol) [0x00007FF692276D83]\nE       \t(No symbol) [0x00007FF6922483A8]\nE       \t(No symbol) [0x00007FF692249441]\nE       \tGetHandleVerifier [0x00007FF6928025CD+4238301]\nE       \tGetHandleVerifier [0x00007FF69283F72D+4488509]\nE       \tGetHandleVerifier [0x00007FF692837A0F+4456479]\nE       \tGetHandleVerifier [0x00007FF6924E05A6+953270]\nE       \t(No symbol) [0x00007FF69237E57F]\nE       \t(No symbol) [0x00007FF692379254]\nE       \t(No symbol) [0x00007FF69237938B]\nE       \t(No symbol) [0x00007FF692369BC4]\nE       \tBaseThreadInitThunk [0x00007FFE294726AD+29]\nE       \tRtlUserThreadStart [0x00007FFE2A76AA68+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "log_on_failure",
    "time" : {
      "start" : 1711091664864,
      "stop" : 1711091664865,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup_and_teardown",
    "time" : {
      "start" : 1711091652522,
      "stop" : 1711091654163,
      "duration" : 1641
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=123.0.6312.58)\nStacktrace:\n\tGetHandleVerifier [0x00007FF692407062+63090]\n\t(No symbol) [0x00007FF692372CB2]\n\t(No symbol) [0x00007FF69220EB1D]\n\t(No symbol) [0x00007FF6921FC76D]\n\t(No symbol) [0x00007FF6921FB100]\n\t(No symbol) [0x00007FF6921FBA8F]\n\t(No symbol) [0x00007FF69220925A]\n\t(No symbol) [0x00007FF69221AB0E]\n\t(No symbol) [0x00007FF69221F82A]\n\t(No symbol) [0x00007FF6921FC006]\n\t(No symbol) [0x00007FF69221A6A4]\n\t(No symbol) [0x00007FF6922932ED]\n\t(No symbol) [0x00007FF692276D83]\n\t(No symbol) [0x00007FF6922483A8]\n\t(No symbol) [0x00007FF692249441]\n\tGetHandleVerifier [0x00007FF6928025CD+4238301]\n\tGetHandleVerifier [0x00007FF69283F72D+4488509]\n\tGetHandleVerifier [0x00007FF692837A0F+4456479]\n\tGetHandleVerifier [0x00007FF6924E05A6+953270]\n\t(No symbol) [0x00007FF69237E57F]\n\t(No symbol) [0x00007FF692379254]\n\t(No symbol) [0x00007FF69237938B]\n\t(No symbol) [0x00007FF692369BC4]\n\tBaseThreadInitThunk [0x00007FFE294726AD+29]\n\tRtlUserThreadStart [0x00007FFE2A76AA68+40]\n\n",
    "statusTrace" : "  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\tests\\conftest.py\", line 42, in setup_and_teardown\n    driver.maximize_window()\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 499, in maximize_window\n    self.execute(command, None)\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Purushotam\\PycharmProjects\\SeleniumPythonHybridFramework\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "log_on_failure::0",
    "time" : {
      "start" : 1711091669658,
      "stop" : 1711091669658,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "CTIVL0145"
  }, {
    "name" : "thread",
    "value" : "12020-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "email_address",
    "value" : "'amotoorisampletwo@gmail.com'"
  }, {
    "name" : "password",
    "value" : "'secondtwo'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "d3e0ee2032eaa176",
      "status" : "passed",
      "time" : {
        "start" : 1711026000628,
        "stop" : 1711026005238,
        "duration" : 4610
      }
    }, {
      "uid" : "e71e5ca7a24f549e",
      "status" : "passed",
      "time" : {
        "start" : 1710961260220,
        "stop" : 1710961264967,
        "duration" : 4747
      }
    }, {
      "uid" : "310779602ae93e6d",
      "status" : "passed",
      "time" : {
        "start" : 1710960932037,
        "stop" : 1710960937461,
        "duration" : 5424
      }
    }, {
      "uid" : "b587785e7da6d17d",
      "status" : "passed",
      "time" : {
        "start" : 1710959963848,
        "stop" : 1710959969385,
        "duration" : 5537
      }
    }, {
      "uid" : "3ae0ece1c7920b8",
      "status" : "passed",
      "time" : {
        "start" : 1710934825981,
        "stop" : 1710934830514,
        "duration" : 4533
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "3396bd60a97e49a",
        "reportUrl" : "http://localhost:8080/job/TutorialsNinja/11/allure/#testresult/3396bd60a97e49a",
        "status" : "passed",
        "time" : {
          "start" : 1711026000628,
          "stop" : 1711026005238,
          "duration" : 4610
        }
      }, {
        "uid" : "c48aa51ce327cb79",
        "reportUrl" : "http://localhost:8080/job/TutorialsNinja/10/allure/#testresult/c48aa51ce327cb79",
        "status" : "passed",
        "time" : {
          "start" : 1710961260220,
          "stop" : 1710961264967,
          "duration" : 4747
        }
      } ]
    },
    "tags" : [ "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')" ]
  },
  "source" : "a36bc59f37328be8.json",
  "parameterValues" : [ "'amotoorisampletwo@gmail.com'", "'secondtwo'" ]
}